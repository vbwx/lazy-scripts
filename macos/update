#!/bin/bash

set -euo pipefail
IFS=$'\n\t'

targets=(
	brew
	cpan
	gem
	npm
	nvm
	phpenv
	pip
	pip3
	pyenv
	rbenv
	texlive
	vim
)

function help {
	echo "The update utility provides a simple interface to perform updates of programs and packages."
	usage
}

function usage {
	echo -en "\nusage: update (all"
	for t in ${targets[*]}; do
		echo -n " | $t"
	done
	echo ")"
	echo "       update help"
	exit $*
}

function exist {
	type -t "$1" > /dev/null
}

function islocal {
	local bin="$(type -P "$1" 2> /dev/null)"
	exist "$1" && [[ ${bin#*/usr/local} != $bin && ${bin#*$HOME} != $bin ]]
}

function ulsudo {
	local cmd
	if [[ $1 == +* ]]; then
		cmd=${1:1}
		shift
	else
		cmd=$1
	fi
	if islocal "$cmd"; then
		"$@"
	else
		sudo "$@"
	fi
}

if [ $# -eq 0 ]; then
	>&2 echo "update: target missing"
	usage 1
fi

for t in $*; do
	case $t in
		(all)
			$0 ${targets[*]}
			;;
		(brew)
			brew update
			brew upgrade
			;;
		(nvm)
			cd "$NVM_DIR"
			git fetch origin
			git checkout `git describe --abbrev=0 --tags --match "v[0-9]*" origin`
			source "$NVM_DIR/nvm.sh"
			;;
		(npm)
			ulsudo npm install -g npm@latest
			ulsudo npm update -g
			;;
		(phpenv)
			cd "$(phpenv root)"
			git pull
			;;
		(rbenv)
			cd "$(rbenv root)"
			git pull
			;;
		(pyenv)
			cd "$(pyenv root)"
			git pull
			;;
		(cpan)
			ulsudo cpan -u
			;;
		(pip)
			pip freeze --local 2> /dev/null | grep -v '^\-e' | cut -d = -f 1 | ulsudo +python xargs -n1 pip install -U
			;;
		(pip3)
			pip3 freeze --local 2> /dev/null | grep -v '^\-e' | cut -d = -f 1 | ulsudo +python xargs -n1 pip3 install -U
			;;
		(gem)
			ulsudo gem update -N
			;;
		(vim)
			if [[ -f "$HOME/.vim/autoload/plug.vim" || -d "$HOME/.vim/plugged" ]]; then
				vim +PlugUpgrade +PlugUpdate +qall
			elif [[ -d "$HOME/.vim/bundle/neobundle.vim" ]]; then
				vim +NeoBundleUpdate +qall
			elif [[ -d "$HOME/.vim/bundle/repos" ]]; then
				vim +"call dein#update()" +qall
			elif [[ -d "$HOME/.vim/bundle" ]]; then
				vim +PluginUpdate +qall
			elif [[ -d "$HOME/.vim/vim-addons" || -d "$HOME/.vim/addons" ]]; then
				vim +UpdateAddons +qall
			elif [[ -f "$HOME/.vim/autoload/pathogen.vim" || -d "$HOME/.vim/bundle/vim-pathogen" ]]; then
				for bundle in ~/.vim/bundle/*; do
					git -C "$bundle" pull --recurse-submodules
				done
			else
				>&2 echo "update: no Vim plugin manager found"
			fi
			;;
		(texlive)
			ulsudo tlmgr update --all
			;;
		(help|--help)
			help
			;;
		(*)
			alt=($(which -a update))
			if [ ${#alt[@]} -gt 1 ]; then
				${alt[1]} "$@"
			else
				>&2 echo "update: unknown target: $t"
				usage 1
			fi
	esac
done
